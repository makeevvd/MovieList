[{"C:\\Users\\makeevvd\\Documents\\GitHub\\MovieList\\movielist\\src\\index.tsx":"1","C:\\Users\\makeevvd\\Documents\\GitHub\\MovieList\\movielist\\src\\reducers\\movieReducer\\actionCreators.ts":"2","C:\\Users\\makeevvd\\Documents\\GitHub\\MovieList\\movielist\\src\\components\\SearchForm.tsx":"3","C:\\Users\\makeevvd\\Documents\\GitHub\\MovieList\\movielist\\src\\components\\Movie.tsx":"4","C:\\Users\\makeevvd\\Documents\\GitHub\\MovieList\\movielist\\src\\api\\moviesAPI.ts":"5","C:\\Users\\makeevvd\\Documents\\GitHub\\MovieList\\movielist\\src\\components\\MainPage.tsx":"6","C:\\Users\\makeevvd\\Documents\\GitHub\\MovieList\\movielist\\src\\api\\axios.ts":"7","C:\\Users\\makeevvd\\Documents\\GitHub\\MovieList\\movielist\\src\\reducers\\movieReducer\\actionTypes.ts":"8","C:\\Users\\makeevvd\\Documents\\GitHub\\MovieList\\movielist\\src\\reducers\\movieReducer\\movieReducer.ts":"9","C:\\Users\\makeevvd\\Documents\\GitHub\\MovieList\\movielist\\src\\App.tsx":"10","C:\\Users\\makeevvd\\Documents\\GitHub\\MovieList\\movielist\\src\\types.ts":"11"},{"size":321,"mtime":1611212177682,"results":"12","hashOfConfig":"13"},{"size":1284,"mtime":1611212166761,"results":"14","hashOfConfig":"13"},{"size":4044,"mtime":1611556362462,"results":"15","hashOfConfig":"13"},{"size":4484,"mtime":1611212166761,"results":"16","hashOfConfig":"13"},{"size":2350,"mtime":1611212166761,"results":"17","hashOfConfig":"13"},{"size":2933,"mtime":1611557628598,"results":"18","hashOfConfig":"13"},{"size":243,"mtime":1611227652712,"results":"19","hashOfConfig":"13"},{"size":1395,"mtime":1611212166761,"results":"20","hashOfConfig":"13"},{"size":3404,"mtime":1611557663358,"results":"21","hashOfConfig":"13"},{"size":4177,"mtime":1611556362483,"results":"22","hashOfConfig":"13"},{"size":153,"mtime":1611212166761,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"eimkoh",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\makeevvd\\Documents\\GitHub\\MovieList\\movielist\\src\\index.tsx",[],["50","51"],"C:\\Users\\makeevvd\\Documents\\GitHub\\MovieList\\movielist\\src\\reducers\\movieReducer\\actionCreators.ts",["52"],"import {GenreInterface, GenreStateInterface, MovieStateInterface} from \"./movieReducer\";\r\nimport {\r\n    AddMoviesActionInterface,\r\n    MoviesActionTypes,\r\n    SetGenresActionInterface,\r\n    SetMoviesActionInterface,\r\n    SetMoviesLoadingStatusActionInterface, SetPageActionInterface, ToggleFavouriteActionInterface\r\n} from \"./actionTypes\";\r\nimport {LoadingStatus} from \"../../types\";\r\n\r\nexport const setMovies = (payload: MovieStateInterface): SetMoviesActionInterface => ({\r\n    type: MoviesActionTypes.SET_MOVIES,\r\n    payload\r\n})\r\n\r\nexport const addMovies = (payload: MovieStateInterface): AddMoviesActionInterface => ({\r\n    type: MoviesActionTypes.ADD_MOVIES,\r\n    payload\r\n})\r\n\r\nexport const setGenres = (payload: GenreStateInterface): SetGenresActionInterface => ({\r\n    type: MoviesActionTypes.SET_GENRES,\r\n    payload\r\n})\r\n\r\nexport const setLoadingStatus = (payload: LoadingStatus): SetMoviesLoadingStatusActionInterface => ({\r\n    type: MoviesActionTypes.SET_LOADING_STATE,\r\n    payload\r\n})\r\n\r\nexport const toggleFavourite = (payload: number): ToggleFavouriteActionInterface => ({\r\n    type: MoviesActionTypes.TOGGLE_FAVOURITE,\r\n    payload\r\n})\r\n\r\nexport const setPage = (payload: number): SetPageActionInterface => ({\r\n    type: MoviesActionTypes.SET_PAGE,\r\n    payload\r\n})","C:\\Users\\makeevvd\\Documents\\GitHub\\MovieList\\movielist\\src\\components\\SearchForm.tsx",["53","54","55","56","57","58","59","60","61","62","63","64","65","66"],"import React, {Dispatch, Reducer, SetStateAction, useEffect, useReducer, useState} from 'react'\r\nimport { Input, Button, Checkbox, Tooltip, Select, Form} from 'antd';\r\nimport movieReducer, {\r\n    GenreInterface,\r\n    GenreStateInterface,\r\n    initialState,\r\n    State\r\n} from \"../reducers/movieReducer/movieReducer\";\r\nimport {SearchQueryInterface} from \"../App\";\r\nimport moviesAPI from \"../api/moviesAPI\";\r\nimport {setGenres, setLoadingStatus} from \"../reducers/movieReducer/actionCreators\";\r\nimport {MovieActions} from \"../reducers/movieReducer/actionTypes\";\r\nimport {LoadingStatus} from \"../types\";\r\nimport {useAsync} from \"../hooks/useAsync\";\r\nimport styled from \"styled-components\";\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst SearchForm: React.FC<SearchFormProps> = ({setSearchQuery, genres, setPage}) => {\r\n\r\n    const [state, dispatch] = useReducer<Reducer<State, MovieActions>>(movieReducer, initialState);\r\n\r\n\r\n    const handleOnSortChange = (sortParameter: string): void => {\r\n        setSearchQuery((prevQuery) => ({ ...prevQuery, sort_by: sortParameter }))\r\n        setPage(1)\r\n    }\r\n\r\n    const handleOnGenreSelected = (genreId: number) => {\r\n        setSearchQuery( (prevQuery) => ({ ...prevQuery, with_genres: [ ...prevQuery.with_genres, genreId] }) )\r\n        setPage(1)\r\n    }\r\n\r\n    const handleOnGenreDeselected = (genreId: number) => {\r\n        setSearchQuery( (prevQuery) => ({ ...prevQuery, with_genres: prevQuery.with_genres.filter((id) => id !== genreId)}) )\r\n        setPage(1)\r\n    }\r\n\r\n    const onFormChangeHandler = (e: any) => {\r\n    }\r\n\r\n        const options = genres.map((genreObject: any) => <Option key={genreObject.id} value={genreObject.id}>{genreObject.name}</Option>);\r\n\r\n    return (\r\n        <SearchFormContainer>\r\n            <FormContainer onChange={onFormChangeHandler}>\r\n                <Form.Item\r\n                    name=\"sortBy\"\r\n                >\r\n                    <SortFormContainer>\r\n                        <Label htmlFor=\"sortBy\">Sort by:</Label>\r\n                        <Select style={{width: 200}} id=\"sortBy\" onSelect={handleOnSortChange}>\r\n                            <Option value=\"popularity.desc\" >Popularity (desc.)</Option>\r\n                            <Option value=\"popularity.asc\">Popularity (asc.)</Option>\r\n                            <Option value=\"vote_average.desc\" >Rating (desc.)</Option>\r\n                            <Option value=\"vote_average.asc\">Rating (asc.)</Option>\r\n                            <Option value=\"release_date.desc\">Recency (desc.)</Option>\r\n                            <Option value=\"release_date.asc\">Recency (asc.)</Option>\r\n                        </Select>\r\n                    </SortFormContainer>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"filerBy\"\r\n                >\r\n                    <GenreFilterContainer>\r\n                        <Label htmlFor=\"sortBy\">Genres:</Label>\r\n                        <Select style={{width: 200}} id=\"filterByGenres\" onSelect={handleOnGenreSelected} onDeselect={handleOnGenreDeselected} mode=\"multiple\" showArrow>\r\n                            {options}\r\n                        </Select>\r\n                    </GenreFilterContainer>\r\n                </Form.Item>\r\n\r\n            </FormContainer>\r\n        </SearchFormContainer>\r\n    )\r\n}\r\n\r\nconst SearchFormContainer = styled.div`\r\ndisplay: flex;\r\njustify-content: flex-start;\r\n`\r\n\r\nconst FormContainer = styled(Form)`\r\ndisplay: flex; \r\njustify-content: flex-start;\r\ngap: 20px;\r\n\r\n@media (max-width: 600px) {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    gap: 0;\r\n  }\r\n`\r\n\r\nconst SortFormContainer = styled.div`\r\n display: flex;\r\n flex-direction: column;\r\n max-width: 400px;\r\n`\r\n\r\nconst Label = styled.label`\r\nmin-width: 130px;\r\nmargin-bottom: 8px;\r\n`\r\n\r\nconst GenreFilterContainer = styled.div`\r\n display: flex;\r\n flex-direction: column;\r\n max-width: 400px;\r\n`\r\n\r\ninterface SearchFormProps {\r\n    setSearchQuery: Dispatch<SetStateAction<SearchQueryInterface>>\r\n    genres: GenreInterface[]\r\n    setPage: Dispatch<SetStateAction<number>>\r\n}\r\n\r\nexport default SearchForm;","C:\\Users\\makeevvd\\Documents\\GitHub\\MovieList\\movielist\\src\\components\\Movie.tsx",[],"C:\\Users\\makeevvd\\Documents\\GitHub\\MovieList\\movielist\\src\\api\\moviesAPI.ts",[],"C:\\Users\\makeevvd\\Documents\\GitHub\\MovieList\\movielist\\src\\components\\MainPage.tsx",["67","68","69"],"C:\\Users\\makeevvd\\Documents\\GitHub\\MovieList\\movielist\\src\\api\\axios.ts",[],"C:\\Users\\makeevvd\\Documents\\GitHub\\MovieList\\movielist\\src\\reducers\\movieReducer\\actionTypes.ts",["70"],"import {LoadingStatus} from \"../../types\";\r\nimport {GenreInterface, GenreStateInterface, MovieStateInterface} from \"./movieReducer\";\r\n\r\nexport enum MoviesActionTypes {\r\n    SET_MOVIES = 'movies/SET_MOVIES',\r\n    SET_GENRES = 'movies/SET_GENRES',\r\n    SET_LOADING_STATE = 'movies/SET_LOADING_STATE',\r\n    SET_PAGE = 'SET_PAGE',\r\n    ADD_MOVIES = 'ADD_MOVIES',\r\n    TOGGLE_FAVOURITE = 'TOGGLE_FAVOURITE'\r\n}\r\n\r\n\r\nexport interface SetMoviesActionInterface {\r\n    type: MoviesActionTypes.SET_MOVIES\r\n    payload: MovieStateInterface;\r\n}\r\n\r\nexport interface AddMoviesActionInterface {\r\n    type: MoviesActionTypes.ADD_MOVIES\r\n    payload: MovieStateInterface;\r\n}\r\n\r\nexport interface SetGenresActionInterface {\r\n    type: MoviesActionTypes.SET_GENRES\r\n    payload: GenreStateInterface\r\n}\r\n\r\nexport interface SetMoviesLoadingStatusActionInterface {\r\n    type: MoviesActionTypes.SET_LOADING_STATE;\r\n    payload: LoadingStatus;\r\n}\r\n\r\nexport interface SetPageActionInterface {\r\n    type: MoviesActionTypes.SET_PAGE;\r\n    payload: number;\r\n}\r\n\r\nexport interface ToggleFavouriteActionInterface {\r\n    type: MoviesActionTypes.TOGGLE_FAVOURITE;\r\n    payload: number;\r\n}\r\n\r\nexport type MovieActions =\r\n    | SetMoviesActionInterface\r\n    | SetGenresActionInterface\r\n    | SetMoviesLoadingStatusActionInterface\r\n    | SetPageActionInterface\r\n    | AddMoviesActionInterface\r\n    | ToggleFavouriteActionInterface\r\n","C:\\Users\\makeevvd\\Documents\\GitHub\\MovieList\\movielist\\src\\reducers\\movieReducer\\movieReducer.ts",[],"C:\\Users\\makeevvd\\Documents\\GitHub\\MovieList\\movielist\\src\\App.tsx",[],"C:\\Users\\makeevvd\\Documents\\GitHub\\MovieList\\movielist\\src\\types.ts",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":9,"nodeType":"77","messageId":"78","endLine":1,"endColumn":23},{"ruleId":"75","severity":1,"message":"79","line":1,"column":51,"nodeType":"77","messageId":"78","endLine":1,"endColumn":60},{"ruleId":"75","severity":1,"message":"80","line":1,"column":74,"nodeType":"77","messageId":"78","endLine":1,"endColumn":82},{"ruleId":"75","severity":1,"message":"81","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":15},{"ruleId":"75","severity":1,"message":"82","line":2,"column":17,"nodeType":"77","messageId":"78","endLine":2,"endColumn":23},{"ruleId":"75","severity":1,"message":"83","line":2,"column":25,"nodeType":"77","messageId":"78","endLine":2,"endColumn":33},{"ruleId":"75","severity":1,"message":"84","line":2,"column":35,"nodeType":"77","messageId":"78","endLine":2,"endColumn":42},{"ruleId":"75","severity":1,"message":"85","line":5,"column":5,"nodeType":"77","messageId":"78","endLine":5,"endColumn":24},{"ruleId":"75","severity":1,"message":"86","line":10,"column":8,"nodeType":"77","messageId":"78","endLine":10,"endColumn":17},{"ruleId":"75","severity":1,"message":"87","line":11,"column":9,"nodeType":"77","messageId":"78","endLine":11,"endColumn":18},{"ruleId":"75","severity":1,"message":"88","line":11,"column":20,"nodeType":"77","messageId":"78","endLine":11,"endColumn":36},{"ruleId":"75","severity":1,"message":"89","line":13,"column":9,"nodeType":"77","messageId":"78","endLine":13,"endColumn":22},{"ruleId":"75","severity":1,"message":"90","line":14,"column":9,"nodeType":"77","messageId":"78","endLine":14,"endColumn":17},{"ruleId":"75","severity":1,"message":"91","line":23,"column":12,"nodeType":"77","messageId":"78","endLine":23,"endColumn":17},{"ruleId":"75","severity":1,"message":"92","line":23,"column":19,"nodeType":"77","messageId":"78","endLine":23,"endColumn":27},{"ruleId":"75","severity":1,"message":"93","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":20},{"ruleId":"75","severity":1,"message":"85","line":1,"column":23,"nodeType":"77","messageId":"78","endLine":1,"endColumn":42},{"ruleId":"75","severity":1,"message":"94","line":1,"column":44,"nodeType":"77","messageId":"78","endLine":1,"endColumn":56},{"ruleId":"75","severity":1,"message":"76","line":2,"column":9,"nodeType":"77","messageId":"78","endLine":2,"endColumn":23},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"@typescript-eslint/no-unused-vars","'GenreInterface' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'Checkbox' is defined but never used.","'Tooltip' is defined but never used.","'GenreStateInterface' is defined but never used.","'moviesAPI' is defined but never used.","'setGenres' is defined but never used.","'setLoadingStatus' is defined but never used.","'LoadingStatus' is defined but never used.","'useAsync' is defined but never used.","'state' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'movieReducer' is defined but never used.","'initialState' is defined but never used.","no-global-assign","no-unsafe-negation"]